/* В данном файле описаны структуры данных,
используемые при рассчётах. */
#ifndef __MY_TYPES__
#define __MY_TYPES__

//uns-сокращенное имя для неотрицательных целых чисел
typedef unsigned uns;

//Структура для хранения физических констант
struct physConsts {
  double ro; //плотность
  double c; //удельная теплоёмкость
  double k; //коэффициент теплопроводности
};

//Дискретный аналог фазового пространства
//В нём хранится рассчётная сетка, а также её параметры
struct discrMesh {
  double len; //Длина стержня (расчётной области)
  uns Nv; //Число контрольных объёмов
  uns Np; //Число контрольных (узловых) точек
  uns Nt; //Количество временных слоёв
  double *Faces; //Координаты граней конт. объёмов
  double *Nodes; //Координаты узловых точек
  //Массивы с координатами имеют общую длину.
  //В нек. из них есть неиспользуемые значения, они равны NAN
  double T_end; //Конечное время
  double *cur_t; //Значение времени на текущем слое
  double dt; //Шаг по времени
};

//Структура для хранения данных о погрешностях вычислений
struct errors {
//Знач. абс. погр. на тек. врем. слое для каждой узловой точки
  double *abs;

//Макс. знач. абс. погрешности для текю врем. слоя
  double maxAbs;

//Знач. относит. погр. на тек. врем. слое для каждой узловой точки
  double *rel;

//Макс. знач. относит. погрешности для текю врем. слоя
  double maxRel;
};
#endif
